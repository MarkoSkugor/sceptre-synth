{"version":3,"sources":["stories/button/Button.js","stories/keyboard/Keyboard.js","stories/knob/Knob.js","stories/switch/Switch.js","SynthEngine.js","Synth.js","reportWebVitals.js","index.js"],"names":["Button","props","state","active","handleButtonClick","bind","$event","this","onClick","setState","timeout","setTimeout","clearTimeout","className","disabled","type","children","React","Component","defaultProps","undefined","KEY_MAP","a","w","s","e","d","f","t","g","y","h","u","j","k","o","l","p","Keyboard","document","addEventListener","key","octave","startingOctave","indexOf","onKeyPressed","triggerKeyPressActiveState","keyElement","getElementById","classList","add","remove","id","keyboardOctaves","i","numOctaves","push","renderKeyboardOctave","gsap","registerPlugin","Draggable","Knob","value","initialValue","toFixed","precision","calculateRotation","calculateValue","knobRef","createRef","TweenLite","set","current","rotation","create","throwProps","edgeResistance","onDrag","bounds","minRotation","maxRotation","draggableInstance","get","range","Math","abs","minValue","maxValue","parseFloat","valueChanged","label","ref","units","switchRef","switchThumbRef","x","minX","maxX","SynthEngine","settings","master","level","oscillator","waveForm","amp","attack","release","filter","cutoff","resonance","envelope","reverb","initializeAudioContext","initializeOscillatorNode","initializeFilterNode","initializeGainNode","initializeReverb","initializeCompressor","oscillatorNode","connect","filterNode1","filterNode2","reverbNode","reverbDryGain","reverbWetGain","volumeNode","compressorNode","audioContext","destination","start","drySignalGain","cos","PI","wetSignalGain","gain","window","AudioContext","webkitAudioContext","createOscillator","frequency","createGain","setValueAtTime","currentTime","createBiquadFilter","createConvolver","irRoomRequest","XMLHttpRequest","open","responseType","onload","decodeAudioData","response","buffer","send","setReverb","createDynamicsCompressor","now","cancelScheduledValues","Q","linearRampToValueAtTime","setTargetAtTime","triggerFilterEnvelope","triggerAmpEnvelope","Octave","b","pow","aSharp","gSharp","fSharp","dSharp","cSharp","c","Synth","started","initializeScale","setLevel","setAmpAttack","setAmpRelease","setFilterCutoff","setFilterResonance","setFilterEnvelope","setFilterAttack","setFilterRelease","setWaveForm","synthEngine","scale","note","playTone","setStartingOctave","aria-label","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode"],"mappings":"2VAIMA,E,kDACJ,WAAYC,GAAQ,IAAD,8BACjB,cAAMA,IACDC,MAAQ,CACXC,QAAQ,GAEV,EAAKC,kBAAoB,EAAKA,kBAAkBC,KAAvB,gBALR,E,qDAQnB,SAAkBC,GAAS,IAAD,OACxBC,KAAKN,MAAMO,QAAQF,GACnBC,KAAKE,SAAS,CAAEN,QAAQ,IACxBI,KAAKG,QAAUC,YAAW,WACxB,EAAKF,SAAS,CAAEN,QAAQ,MACvB,M,kCAGL,WACES,aAAaL,KAAKG,W,oBAGpB,WACE,OACE,qBAAKG,UAAU,oBAAf,SACE,wBACEC,SAAUP,KAAKN,MAAMa,SACrBC,KAAK,SACLF,UAAS,iBAAYN,KAAKL,MAAMC,OAAS,SAAW,IACpDK,QAASD,KAAKH,kBAJhB,SAMGG,KAAKN,MAAMe,iB,GA9BDC,IAAMC,WA0C3BlB,EAAOmB,aAAe,CACpBL,UAAU,EACVN,aAASY,G,UC3CLC,EAAU,CACdC,EAAG,IACHC,EAAG,SACHC,EAAG,IACHC,EAAG,SACHC,EAAG,IACHC,EAAG,IACHC,EAAG,SACHC,EAAG,IACHC,EAAG,SACHC,EAAG,IACHC,EAAG,SACHC,EAAG,IACHC,EAAG,IACHC,EAAG,SACHC,EAAG,IACHC,EAAG,UAGCC,E,uKACJ,WAAqB,IAAD,OAClBC,SAASC,iBAAiB,WAAW,YAAc,IAAXC,EAAU,EAAVA,IACtC,GAAIpB,EAAQoB,GAAM,CAChB,IAAIC,EAAS,EAAKzC,MAAM0C,gBACK,IAAzB,OAAOC,QAAQH,KAAaC,GAAU,GAC1C,EAAKzC,MAAM4C,aAAaH,EAAQrB,EAAQoB,IACxC,EAAKK,2BAA2BL,EAAKC,S,wCAK3C,SAA2BD,EAAKC,GAC9B,IAAMK,EAAaR,SAASS,eAAT,UAA2B3B,EAAQoB,IAAnC,OAA0CC,IAEzDK,IACFA,EAAWE,UAAUC,IAAI,UACzBvC,YAAW,WACToC,EAAWE,UAAUE,OAAO,YAC3B,Q,kCAIP,SAAqBT,GAAS,IAAD,OAC3B,OACE,sBAAkB7B,UAAU,mBAA5B,UACE,wBAAQuC,GAAE,WAAMV,GAAUlC,QAAS,kBAAM,EAAKP,MAAM4C,aAAaH,EAAQ,QACzE,wBAAQU,GAAE,gBAAWV,GAAUlC,QAAS,kBAAM,EAAKP,MAAM4C,aAAaH,EAAQ,aAC9E,wBAAQU,GAAE,WAAMV,GAAUlC,QAAS,kBAAM,EAAKP,MAAM4C,aAAaH,EAAQ,QACzE,wBAAQU,GAAE,gBAAWV,GAAUlC,QAAS,kBAAM,EAAKP,MAAM4C,aAAaH,EAAQ,aAC9E,wBAAQU,GAAE,WAAMV,GAAUlC,QAAS,kBAAM,EAAKP,MAAM4C,aAAaH,EAAQ,QACzE,wBAAQU,GAAE,WAAMV,GAAUlC,QAAS,kBAAM,EAAKP,MAAM4C,aAAaH,EAAQ,QACzE,wBAAQU,GAAE,gBAAWV,GAAUlC,QAAS,kBAAM,EAAKP,MAAM4C,aAAaH,EAAQ,aAC9E,wBAAQU,GAAE,WAAMV,GAAUlC,QAAS,kBAAM,EAAKP,MAAM4C,aAAaH,EAAQ,QACzE,wBAAQU,GAAE,gBAAWV,GAAUlC,QAAS,kBAAM,EAAKP,MAAM4C,aAAaH,EAAQ,aAC9E,wBAAQU,GAAE,WAAMV,GAAUlC,QAAS,kBAAM,EAAKP,MAAM4C,aAAaH,EAAQ,QACzE,wBAAQU,GAAE,gBAAWV,GAAUlC,QAAS,kBAAM,EAAKP,MAAM4C,aAAaH,EAAQ,aAC9E,wBAAQU,GAAE,WAAMV,GAAUlC,QAAS,kBAAM,EAAKP,MAAM4C,aAAaH,EAAQ,UAZjEA,K,oBAiBd,WAGE,IAFA,IAAMW,EAAkB,GAEfC,EAAI,EAAGA,EAAI/C,KAAKN,MAAMsD,WAAYD,IACzCD,EAAgBG,KAAKjD,KAAKkD,qBAAqBH,EAAI/C,KAAKN,MAAM0C,iBAGhE,OACE,qBAAK9B,UAAU,sBAAf,SACGwC,Q,GAnDcpC,IAAMC,WA+D7BoB,EAASnB,aAAe,CACtBoC,WAAY,EACZZ,eAAgB,G,+BClFlBe,IAAKC,eAAeC,K,IAEdC,E,kDACJ,WAAY5D,GAAQ,IAAD,8BACjB,cAAMA,IACDC,MAAQ,CACX4D,MAAO7D,EAAM8D,aAAaC,QAAQ/D,EAAMgE,YAE1C,EAAKC,kBAAoB,EAAKA,kBAAkB7D,KAAvB,gBACzB,EAAK8D,eAAiB,EAAKA,eAAe9D,KAApB,gBACtB,EAAK+D,QAAUnD,IAAMoD,YAPJ,E,qDAUnB,WACEC,IAAUC,IAAIhE,KAAK6D,QAAQI,QAAS,CAClCC,SAAUlE,KAAK2D,sBAGjBN,IAAUc,OAAOnE,KAAK6D,QAAQI,QAAS,CACrCzD,KAAM,WACN4D,YAAY,EACZC,eAAgB,IAChBC,OAAQtE,KAAK4D,eACbW,OAAQ,CACNC,aAAc,IACdC,YAAa,OAGjBzE,KAAK0E,kBAAoBrB,IAAUsB,IAAI3E,KAAK6D,QAAQI,W,4BAGtD,WACE,IAEIV,EAFEqB,EAAQC,KAAKC,IAAI9E,KAAKN,MAAMqF,SAAW/E,KAAKN,MAAMsF,UACpDd,EAAWlE,KAAK0E,kBAAkBR,SAAW,IAAM,GAGnDA,GAAY,IACZA,EAAW,GAGXA,GAAY,IACZA,EAAW,GAGfX,GAAUW,EAAWe,WAAWL,GAAU5E,KAAKN,MAAMqF,UAAUtB,QAAQzD,KAAKN,MAAMgE,WAElF1D,KAAKE,SAAS,CAAEqD,UACZvD,KAAKN,MAAMwF,cACblF,KAAKN,MAAMwF,aAAaD,WAAW1B,M,+BAIvC,WACE,IAAMqB,EAAQC,KAAKC,IAAI9E,KAAKN,MAAMqF,SAAW/E,KAAKN,MAAMsF,UAGxD,OAFyE,MAAtDhF,KAAKL,MAAM4D,MAAQvD,KAAKN,MAAMqF,UAAUH,EAAQ,M,oBAKrE,WACE,OACE,sBAAKtE,UAAU,kBAAf,UACE,sBAAMA,UAAU,cAAhB,SACGN,KAAKN,MAAMyF,QAEd,qBACEC,IAAKpF,KAAK6D,QACVvD,UAAU,SAEZ,uBAAMA,UAAU,cAAhB,UACGN,KAAKL,MAAM4D,MAAOvD,KAAKN,MAAM2F,gB,GApErB3E,IAAMC,WAqFzB2C,EAAK1C,aAAe,CAClBuE,MAAO,GACPE,MAAO,GACP3B,UAAW,EACXF,aAAc,EACduB,SAAU,EACVC,SAAU,G,MC7FZ7B,IAAKC,eAAeC,M,kDAGlB,WAAY3D,GAAQ,IAAD,8BACjB,cAAMA,IACDC,MAAQ,CACX4D,MAAO7D,EAAM8D,cAEf,EAAKI,eAAiB,EAAKA,eAAe9D,KAApB,gBACtB,EAAKwF,UAAY5E,IAAMoD,YACvB,EAAKyB,eAAiB7E,IAAMoD,YAPX,E,qDAUnB,WACET,IAAUc,OAAOnE,KAAKuF,eAAetB,QAAS,CAC5CzD,KAAM,IAEN4D,YAAY,EACZG,OAAQvE,KAAKsF,UAAUrB,QACvBK,OAAQtE,KAAK4D,iBAEf5D,KAAK0E,kBAAoBrB,IAAUsB,IAAI3E,KAAKuF,eAAetB,W,4BAI7D,WACEjE,KAAKE,SAAS,CACZqD,MAAQvD,KAAK0E,kBAAkBc,GAAKxF,KAAK0E,kBAAkBe,KAAOzF,KAAK0E,kBAAkBgB,MAAS,O,oBAItG,WACE,OACE,sBAAKpF,UAAU,oBAAf,UACE,sBAAMA,UAAU,gBAAhB,SACGN,KAAKN,MAAMyF,QAEd,qBACEC,IAAKpF,KAAKsF,UACVhF,UAAS,yBAAoBN,KAAKL,MAAM4D,MAAQ,SAAW,YAF7D,SAIE,qBAAK6B,IAAKpF,KAAKuF,eAAgBjF,UAAU,2B,GAvC9BI,IAAMC,YAmDpBC,aAAe,CACpBuE,MAAO,GACP3B,cAAc,G,IC9DVmC,E,WAwBJ,aAAe,yBAvBfC,SAAW,CACTC,OAAQ,CACNC,MAAO,GAETC,WAAY,CACVC,SAAU,UAEZC,IAAK,CACHC,OAAQ,GACRC,QAAS,KAEXC,OAAQ,CACNC,OAAQ,IACRC,UAAW,EACXC,SAAU,IACVL,OAAQ,GACRC,QAAS,IAEXK,OAAQ,CACNV,MAAO,MAKT9F,KAAKyG,yBACLzG,KAAK0G,2BACL1G,KAAK2G,uBACL3G,KAAK4G,qBACL5G,KAAK6G,mBACL7G,KAAK8G,uBAGL9G,KAAK+G,eAAeC,QAAQhH,KAAKiH,aACjCjH,KAAKiH,YAAYD,QAAQhH,KAAKkH,aAC9BlH,KAAKkH,YAAYF,QAAQhH,KAAKmH,YAC9BnH,KAAKkH,YAAYF,QAAQhH,KAAKoH,eAC9BpH,KAAKmH,WAAWH,QAAQhH,KAAKqH,eAC7BrH,KAAKqH,cAAcL,QAAQhH,KAAKsH,YAChCtH,KAAKoH,cAAcJ,QAAQhH,KAAKsH,YAChCtH,KAAKsH,WAAWN,QAAQhH,KAAKuH,gBAC7BvH,KAAKuH,eAAeP,QAAQhH,KAAKwH,aAAaC,aAE9CzH,KAAK+G,eAAeW,Q,4CAGtB,SAASnE,GACPvD,KAAK4F,SAASC,OAAOC,MAAQvC,I,uBAG/B,SAAUA,GACRvD,KAAK4F,SAASY,OAAOV,MAAQvC,EAG7B,IAAMoE,EAAgB9C,KAAK+C,IAAY,GAARrE,EAAcsB,KAAKgD,IAC5CC,EAAgBjD,KAAK+C,IAAoB,IAAf,EAAMrE,GAAesB,KAAKgD,IAE1D7H,KAAKoH,cAAcW,KAAKxE,MAAQoE,EAChC3H,KAAKqH,cAAcU,KAAKxE,MAAQuE,I,0BAGlC,SAAavE,GACXvD,KAAK4F,SAASK,IAAIC,OAAS3C,EAAQ,M,2BAGrC,SAAcA,GACZvD,KAAK4F,SAASK,IAAIE,QAAU5C,I,6BAG9B,SAAgBA,GACdvD,KAAK4F,SAASQ,OAAOC,OAAS9C,I,gCAGhC,SAAmBA,GACjBvD,KAAK4F,SAASQ,OAAOE,UAAY/C,I,+BAGnC,SAAkBA,GAChBvD,KAAK4F,SAASQ,OAAOG,SAAWhD,I,6BAGlC,SAAgBA,GACdvD,KAAK4F,SAASQ,OAAOF,OAAS3C,I,8BAGhC,SAAiBA,GACfvD,KAAK4F,SAASQ,OAAOD,QAAU5C,I,yBAGjC,SAAYyC,GACVhG,KAAK4F,SAASG,WAAWC,SAAWA,EACpChG,KAAK+G,eAAevG,KAAOwF,I,oCAG7B,WAEEhG,KAAKwH,aAAe,IAAKQ,OAAOC,cAAgBD,OAAOE,sB,sCAGzD,WAaElI,KAAK+G,eAAiB/G,KAAKwH,aAAaW,mBAGxCnI,KAAK+G,eAAevG,KAAOR,KAAK4F,SAASG,WAAWC,SAEpDhG,KAAK+G,eAAeqB,UAAU7E,MAAQ,M,gCAGxC,WAEEvD,KAAKsH,WAAatH,KAAKwH,aAAaa,aAEpCrI,KAAKsH,WAAWS,KAAKO,eAAe,EAAGtI,KAAKwH,aAAae,e,kCAG3D,WACEvI,KAAKiH,YAAcjH,KAAKwH,aAAagB,qBACrCxI,KAAKkH,YAAclH,KAAKwH,aAAagB,qBACrCxI,KAAKiH,YAAYzG,KAAO,UACxBR,KAAKkH,YAAY1G,KAAO,Y,8BAG1B,WAAoB,IAAD,OACjBR,KAAKmH,WAAanH,KAAKwH,aAAaiB,kBACpCzI,KAAKqH,cAAgBrH,KAAKwH,aAAaa,aACvCrI,KAAKoH,cAAgBpH,KAAKwH,aAAaa,aAEvC,IAAMK,EAAgB,IAAIC,eAG1BD,EAAcE,KAAK,MAAO,yBAAyB,GACnDF,EAAcG,aAAe,cAC7BH,EAAcI,OAAS,WACrB,EAAKtB,aAAauB,gBAChBL,EAAcM,UACd,SAACC,GACC,EAAK9B,WAAW8B,OAASA,MAI/BP,EAAcQ,OAEdlJ,KAAKmJ,UAAUnJ,KAAK4F,SAASY,OAAOV,S,kCAGtC,WACE9F,KAAKuH,eAAiBvH,KAAKwH,aAAa4B,6B,mCAG1C,WACE,IAAMC,EAAMrJ,KAAKwH,aAAae,YAE9BvI,KAAKiH,YAAYmB,UAAUkB,sBAAsBD,GACjDrJ,KAAKkH,YAAYkB,UAAUkB,sBAAsBD,GACjDrJ,KAAKiH,YAAYmB,UAAUE,eAAetI,KAAKiH,YAAYmB,UAAU7E,MAAO8F,GAC5ErJ,KAAKkH,YAAYkB,UAAUE,eAAetI,KAAKkH,YAAYkB,UAAU7E,MAAO8F,GAC5ErJ,KAAKiH,YAAYsC,EAAEhG,MAAQvD,KAAK4F,SAASQ,OAAOE,UAChDtG,KAAKkH,YAAYqC,EAAEhG,MAAQvD,KAAK4F,SAASQ,OAAOE,UAChDtG,KAAKiH,YAAYmB,UAAUoB,wBACzBxJ,KAAK4F,SAASQ,OAAOC,QAAW,KAAQrG,KAAK4F,SAASQ,OAAOC,QAAUrG,KAAK4F,SAASQ,OAAOG,SAC5F8C,EAAMrJ,KAAK4F,SAASQ,OAAOF,QAE7BlG,KAAKkH,YAAYkB,UAAUoB,wBACzBxJ,KAAK4F,SAASQ,OAAOC,QAAW,KAAQrG,KAAK4F,SAASQ,OAAOC,QAAUrG,KAAK4F,SAASQ,OAAOG,SAC5F8C,EAAMrJ,KAAK4F,SAASQ,OAAOF,QAE7BlG,KAAKiH,YAAYmB,UAAUqB,gBACzBzJ,KAAK4F,SAASQ,OAAOC,OACrBgD,EAAMrJ,KAAK4F,SAASQ,OAAOF,OAC3BlG,KAAK4F,SAASQ,OAAOD,QAAU,IAEjCnG,KAAKkH,YAAYkB,UAAUqB,gBACzBzJ,KAAK4F,SAASQ,OAAOC,OACrBgD,EAAMrJ,KAAK4F,SAASQ,OAAOF,OAC3BlG,KAAK4F,SAASQ,OAAOD,QAAU,IAEjCnG,KAAKiH,YAAYmB,UAAUE,eAAetI,KAAK4F,SAASQ,OAAOC,OAAQgD,EAAMrJ,KAAK4F,SAASQ,OAAOF,OAASlG,KAAK4F,SAASQ,OAAOD,SAChInG,KAAKkH,YAAYkB,UAAUE,eAAetI,KAAK4F,SAASQ,OAAOC,OAAQgD,EAAMrJ,KAAK4F,SAASQ,OAAOF,OAASlG,KAAK4F,SAASQ,OAAOD,W,gCAGlI,WACE,IAAMkD,EAAMrJ,KAAKwH,aAAae,YAE9BvI,KAAKsH,WAAWS,KAAKuB,sBAAsBD,GAC3CrJ,KAAKsH,WAAWS,KAAKO,eAAetI,KAAKsH,WAAWS,KAAKxE,MAAO8F,GAChErJ,KAAKsH,WAAWS,KAAKyB,wBACnBxJ,KAAK4F,SAASC,OAAOC,MACrBuD,EAAMrJ,KAAK4F,SAASK,IAAIC,QAE1BlG,KAAKsH,WAAWS,KAAK0B,gBACnB,EACAJ,EAAMrJ,KAAK4F,SAASK,IAAIC,OACxBlG,KAAK4F,SAASK,IAAIE,QAAU,IAE9BnG,KAAKsH,WAAWS,KAAKO,eAAe,EAAGe,EAAMrJ,KAAK4F,SAASK,IAAIC,OAASlG,KAAK4F,SAASK,IAAIE,W,sBAG5F,SAASiC,GACPpI,KAAK+G,eAAeqB,UAAU7E,MAAQ6E,EAEtCpI,KAAK0J,wBACL1J,KAAK2J,yB,KC1MHC,EACJ,WAAY7I,GAAI,oBACdf,KAAK6J,EAAS9I,EAAK8D,KAAKiF,IAAI,EAAG,EAAE,IACjC9J,KAAK+J,OAAShJ,EAAK8D,KAAKiF,IAAI,EAAG,EAAE,IACjC9J,KAAKe,EAAIA,EACTf,KAAKgK,OAASjJ,EAAK8D,KAAKiF,IAAI,GAAI,EAAE,IAClC9J,KAAKsB,EAASP,EAAK8D,KAAKiF,IAAI,GAAI,EAAE,IAClC9J,KAAKiK,OAASlJ,EAAK8D,KAAKiF,IAAI,GAAG,KAC/B9J,KAAKoB,EAASL,EAAK8D,KAAKiF,IAAI,GAAI,EAAE,IAClC9J,KAAKkB,EAASH,EAAK8D,KAAKiF,IAAI,GAAI,EAAE,IAClC9J,KAAKkK,OAASnJ,EAAK8D,KAAKiF,IAAI,GAAG,IAC/B9J,KAAKmB,EAASJ,EAAK8D,KAAKiF,IAAI,GAAI,EAAE,IAClC9J,KAAKmK,OAASpJ,EAAK8D,KAAKiF,IAAI,GAAI,EAAE,IAClC9J,KAAKoK,EAASrJ,EAAK8D,KAAKiF,IAAI,GAAG,MAI7BO,E,kDACJ,WAAY3K,GAAQ,IAAD,8BACjB,cAAMA,IACDC,MAAQ,CACX2K,SAAS,EACTtE,SAAU,SACV5D,eAAgB,GAElB,EAAKmI,kBACL,EAAK7C,MAAQ,EAAKA,MAAM5H,KAAX,gBACb,EAAK0K,SAAW,EAAKA,SAAS1K,KAAd,gBAChB,EAAKqJ,UAAY,EAAKA,UAAUrJ,KAAf,gBACjB,EAAK2K,aAAe,EAAKA,aAAa3K,KAAlB,gBACpB,EAAK4K,cAAgB,EAAKA,cAAc5K,KAAnB,gBACrB,EAAK6K,gBAAkB,EAAKA,gBAAgB7K,KAArB,gBACvB,EAAK8K,mBAAqB,EAAKA,mBAAmB9K,KAAxB,gBAC1B,EAAK+K,kBAAoB,EAAKA,kBAAkB/K,KAAvB,gBACzB,EAAKgL,gBAAkB,EAAKA,gBAAgBhL,KAArB,gBACvB,EAAKiL,iBAAmB,EAAKA,iBAAiBjL,KAAtB,gBACxB,EAAKkL,YAAc,EAAKA,YAAYlL,KAAjB,gBACnB,EAAKwC,aAAe,EAAKA,aAAaxC,KAAlB,gBAnBH,E,yCAsBnB,WACEE,KAAKE,SAAS,CAAEoK,SAAS,IACzBtK,KAAKiL,YAAc,IAAItF,I,6BAGzB,WAEE3F,KAAKkL,MAAQ,GAEb,IAAK,IAAInI,GAAK,EAAGA,EAAI,EAAGA,IAAK,CAC3B,IAAIhC,EAJK,IAII8D,KAAKiF,IAAI,EAAG/G,GACrBZ,EAAS,IAAIyH,EAAO7I,GACxBf,KAAKkL,MAAMjI,KAAKd,M,sBAIpB,SAASoB,GACPvD,KAAKiL,YAAYT,SAASjH,K,uBAG5B,SAAUA,GACRvD,KAAKiL,YAAY9B,UAAU5F,K,0BAG7B,SAAaA,GACXvD,KAAKiL,YAAYR,aAAalH,K,2BAGhC,SAAcA,GACZvD,KAAKiL,YAAYP,cAAcnH,K,6BAGjC,SAAgBA,GACdvD,KAAKiL,YAAYN,gBAAgBpH,K,gCAGnC,SAAmBA,GACjBvD,KAAKiL,YAAYL,mBAAmBrH,K,+BAGtC,SAAkBA,GAChBvD,KAAKiL,YAAYJ,kBAAkBtH,K,6BAGrC,SAAgBA,GACdvD,KAAKiL,YAAYH,gBAAgBvH,K,8BAGnC,SAAiBA,GACfvD,KAAKiL,YAAYF,iBAAiBxH,K,yBAGpC,SAAYyC,GACVhG,KAAKE,SAAS,CAAE8F,aAChBhG,KAAKiL,YAAYD,YAAYhF,K,0BAG/B,SAAa7D,EAAQgJ,GACnBnL,KAAKiL,YAAYG,SAASpL,KAAKkL,MAAM/I,GAAQgJ,M,+BAG/C,SAAkBhJ,GAChBnC,KAAKE,SAAS,CAAEkC,eAAgBD,M,oBAGlC,WAAU,IAAD,OACP,OAAKnC,KAAKL,MAAM2K,QAOd,sBAAKhK,UAAU,QAAf,UACE,sBAAKA,UAAU,sBAAf,UACE,sBAAKA,UAAU,kBAAf,UACE,sBAAKA,UAAU,sBAAf,UACE,sBAAKA,UAAU,kCAAf,UACE,sBAAMA,UAAU,iBAAhB,oBACA,cAAC,EAAD,CACEC,SAAwC,IAA9BP,KAAKL,MAAMyC,eACrBnC,QAAS,kBAAM,EAAKoL,kBAAkB,EAAK1L,MAAMyC,eAAiB,IAClEkJ,aAAW,KAHb,oBAOA,cAAC,EAAD,CACE/K,SAAwC,IAA9BP,KAAKL,MAAMyC,eACrBnC,QAAS,kBAAM,EAAKoL,kBAAkB,EAAK1L,MAAMyC,eAAiB,IAClEkJ,aAAW,OAHb,uBAQF,sBAAKhL,UAAU,UAAf,UACE,sBAAMA,UAAU,iBAAhB,oBACA,cAAC,EAAD,CACE6E,MAAM,QACNzB,UAAW,EACXF,aAAc,EACduB,SAAU,EACVC,SAAU,EACVE,aAAclF,KAAKwK,WAErB,cAAC,EAAD,CACErF,MAAM,SACNzB,UAAW,EACXF,aAAc,IACduB,SAAU,EACVC,SAAU,EACVE,aAAclF,KAAKmJ,eAGvB,sBAAK7I,UAAU,UAAf,UACE,sBAAMA,UAAU,iBAAhB,0BACA,cAAC,EAAD,CACE6E,MAAM,SACNE,MAAM,IACN3B,UAAW,EACXF,aAAc,GACduB,SAAU,IACVC,SAAU,GACVE,aAAclF,KAAKyK,eAErB,cAAC,EAAD,CACEtF,MAAM,UACNE,MAAM,IACN3B,UAAW,EACXF,aAAc,IACduB,SAAU,GACVC,SAAU,GACVE,aAAclF,KAAK0K,sBAIzB,sBAAKpK,UAAU,sBAAf,UACE,sBAAKA,UAAU,UAAf,UACE,sBAAMA,UAAU,iBAAhB,6BACA,cAAC,EAAD,CACE6E,MAAM,SACNE,MAAM,IACN3B,UAAW,EACXF,aAAc,GACduB,SAAU,IACVC,SAAU,GACVE,aAAclF,KAAK8K,kBAErB,cAAC,EAAD,CACE3F,MAAM,UACNE,MAAM,IACN3B,UAAW,EACXF,aAAc,GACduB,SAAU,IACVC,SAAU,GACVE,aAAclF,KAAK+K,sBAGvB,sBAAKzK,UAAU,UAAf,UACE,sBAAMA,UAAU,iBAAhB,oBACA,cAAC,EAAD,CACE6E,MAAM,SACNE,MAAM,KACN3B,UAAW,EACXF,aAAc,IACduB,SAAU,GACVC,SAAU,KACVE,aAAclF,KAAK2K,kBAErB,cAAC,EAAD,CACExF,MAAM,YACNzB,UAAW,EACXF,aAAc,EACduB,SAAU,EACVC,SAAU,GACVE,aAAclF,KAAK4K,qBAErB,cAAC,EAAD,CACEzF,MAAM,WACNzB,UAAW,EACXF,aAAc,IACduB,SAAU,EACVC,SAAU,EACVE,aAAclF,KAAK6K,6BAK3B,sBAAKvK,UAAU,UAAf,UACE,sBAAMA,UAAU,iBAAhB,sBACA,cAAC,EAAD,CACEC,SAAkC,SAAxBP,KAAKL,MAAMqG,SACrB/F,QAAS,kBAAM,EAAK+K,YAAY,SAFlC,kBAMA,cAAC,EAAD,CACEzK,SAAkC,WAAxBP,KAAKL,MAAMqG,SACrB/F,QAAS,kBAAM,EAAK+K,YAAY,WAFlC,oBAMA,cAAC,EAAD,CACEzK,SAAkC,aAAxBP,KAAKL,MAAMqG,SACrB/F,QAAS,kBAAM,EAAK+K,YAAY,aAFlC,sBAMA,cAAC,EAAD,CACEzK,SAAkC,aAAxBP,KAAKL,MAAMqG,SACrB/F,QAAS,kBAAM,EAAK+K,YAAY,aAFlC,4BAQJ,cAAC,EAAD,CACEhI,WAAY,EACZZ,eAAgBpC,KAAKL,MAAMyC,eAC3BE,aAActC,KAAKsC,kBAtJrB,cAAC,EAAD,CAAQrC,QAASD,KAAK0H,MAAtB,gC,GA3FYhH,IAAMC,WChBX4K,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFlK,SAASS,eAAe,SAM1B8I,M","file":"static/js/main.b23043b8.chunk.js","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\nimport './button.scss';\n\nclass Button extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      active: false,\n    };\n    this.handleButtonClick = this.handleButtonClick.bind(this);\n  }\n\n  handleButtonClick($event) {\n    this.props.onClick($event);\n    this.setState({ active: true });\n    this.timeout = setTimeout(() => {\n      this.setState({ active: false });\n    }, 50);\n  }\n\n  componentWillUnmount () {\n    clearTimeout(this.timeout);\n  }\n\n  render() {\n    return (\n      <div className='button__container'>\n        <button\n          disabled={this.props.disabled}\n          type=\"button\"\n          className={`button ${this.state.active ? 'active' : ''}`}\n          onClick={this.handleButtonClick}\n        >\n          {this.props.children}\n        </button>\n      </div>\n    );\n  }\n}\n\nButton.propTypes = {\n  disabled: PropTypes.bool,\n  onClick: PropTypes.func,\n};\n\nButton.defaultProps = {\n  disabled: false,\n  onClick: undefined,\n};\n\nexport { Button };\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nimport './keyboard.scss';\n\nconst KEY_MAP = {\n  a: 'c',\n  w: 'cSharp',\n  s: 'd',\n  e: 'dSharp',\n  d: 'e',\n  f: 'f',\n  t: 'fSharp',\n  g: 'g',\n  y: 'gSharp',\n  h: 'a',\n  u: 'aSharp',\n  j: 'b',\n  k: 'c',\n  o: 'cSharp',\n  l: 'd',\n  p: 'dSharp',\n};\n\nclass Keyboard extends React.Component {\n  componentDidMount() {\n    document.addEventListener('keydown', ({ key }) => {\n      if (KEY_MAP[key]) {\n        let octave = this.props.startingOctave;\n        if ('kolp'.indexOf(key) !== -1) octave += 1;\n        this.props.onKeyPressed(octave, KEY_MAP[key])\n        this.triggerKeyPressActiveState(key, octave);\n      }\n    });\n  }\n\n  triggerKeyPressActiveState(key, octave) {\n    const keyElement = document.getElementById(`${KEY_MAP[key]}${octave}`);\n\n    if (keyElement) {\n      keyElement.classList.add('active');\n      setTimeout(() => {\n        keyElement.classList.remove('active');\n      }, 100);\n    }\n  }\n\n  renderKeyboardOctave(octave) {\n    return (\n      <div key={octave} className='keyboard__octave'>\n        <button id={`c${octave}`} onClick={() => this.props.onKeyPressed(octave, 'c')}></button>\n        <button id={`cSharp${octave}`} onClick={() => this.props.onKeyPressed(octave, 'cSharp')}></button>\n        <button id={`d${octave}`} onClick={() => this.props.onKeyPressed(octave, 'd')}></button>\n        <button id={`dSharp${octave}`} onClick={() => this.props.onKeyPressed(octave, 'dSharp')}></button>\n        <button id={`e${octave}`} onClick={() => this.props.onKeyPressed(octave, 'e')}></button>\n        <button id={`f${octave}`} onClick={() => this.props.onKeyPressed(octave, 'f')}></button>\n        <button id={`fSharp${octave}`} onClick={() => this.props.onKeyPressed(octave, 'fSharp')}></button>\n        <button id={`g${octave}`} onClick={() => this.props.onKeyPressed(octave, 'g')}></button>\n        <button id={`gSharp${octave}`} onClick={() => this.props.onKeyPressed(octave, 'gSharp')}></button>\n        <button id={`a${octave}`} onClick={() => this.props.onKeyPressed(octave, 'a')}></button>\n        <button id={`aSharp${octave}`} onClick={() => this.props.onKeyPressed(octave, 'aSharp')}></button>\n        <button id={`b${octave}`} onClick={() => this.props.onKeyPressed(octave, 'b')}></button>\n      </div>\n    );\n  }\n\n  render() {\n    const keyboardOctaves = [];\n\n    for (let i = 0; i < this.props.numOctaves; i++) {\n      keyboardOctaves.push(this.renderKeyboardOctave(i + this.props.startingOctave));\n    }\n\n    return (\n      <div className=\"keyboard__container\">\n        {keyboardOctaves}\n      </div>\n    );\n  }\n}\n\nKeyboard.propTypes = {\n  numOctaves: PropTypes.number,\n  startingOctave: PropTypes.number,\n  onKeyPressed: PropTypes.func.isRequired,\n};\n\nKeyboard.defaultProps = {\n  numOctaves: 1,\n  startingOctave: 1,\n};\n\nexport { Keyboard };\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { gsap, TweenLite } from \"gsap\";\nimport Draggable from \"gsap/Draggable\";\n\nimport './knob.scss';\n\ngsap.registerPlugin(Draggable);\n\nclass Knob extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      value: props.initialValue.toFixed(props.precision),\n    };\n    this.calculateRotation = this.calculateRotation.bind(this);\n    this.calculateValue = this.calculateValue.bind(this);\n    this.knobRef = React.createRef();\n  }\n\n  componentDidMount() {\n    TweenLite.set(this.knobRef.current, {\n      rotation: this.calculateRotation()\n    });\n\n    Draggable.create(this.knobRef.current, {\n      type: 'rotation',\n      throwProps: false,\n      edgeResistance: 0.85,\n      onDrag: this.calculateValue,\n      bounds: {\n        minRotation: -150,\n        maxRotation: 150\n      }\n    });\n    this.draggableInstance = Draggable.get(this.knobRef.current);\n  }\n\n  calculateValue() {\n    const range = Math.abs(this.props.minValue - this.props.maxValue)\n    let rotation = this.draggableInstance.rotation / 300 + .5;\n    let value;\n\n    if (rotation <= 0) {\n        rotation = 0;\n    }\n\n    if (rotation >= 1) {\n        rotation = 1;\n    }\n\n    value = ((rotation * parseFloat(range)) + this.props.minValue).toFixed(this.props.precision);\n\n    this.setState({ value });\n    if (this.props.valueChanged) {\n      this.props.valueChanged(parseFloat(value));\n    }\n  }\n\n  calculateRotation() {\n    const range = Math.abs(this.props.minValue - this.props.maxValue);\n    const rotation = ((this.state.value - this.props.minValue)/range - .5) * 300;\n\n    return rotation;\n  }\n\n  render() {\n    return (\n      <div className='knob__container'>\n        <span className='knob__label'>\n          {this.props.label}\n        </span>\n        <div\n          ref={this.knobRef}\n          className='knob'\n        ></div>\n        <span className='knob__value'>\n          {this.state.value}{this.props.units}\n        </span>\n      </div>\n    );\n  }\n}\n\nKnob.propTypes = {\n  label: PropTypes.string,\n  units: PropTypes.string,\n  precision: PropTypes.number,\n  initialValue: PropTypes.number,\n  minValue: PropTypes.number,\n  maxValue: PropTypes.number,\n  valueChanged: PropTypes.func.isRequired,\n};\n\nKnob.defaultProps = {\n  label: '',\n  units: '',\n  precision: 2,\n  initialValue: 0,\n  minValue: 0,\n  maxValue: 1,\n};\n\nexport { Knob };\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { gsap } from \"gsap\";\nimport Draggable from \"gsap/Draggable\";\n\nimport './switch.scss';\n\ngsap.registerPlugin(Draggable);\n\nclass Switch extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      value: props.initialValue,\n    };\n    this.calculateValue = this.calculateValue.bind(this);\n    this.switchRef = React.createRef();\n    this.switchThumbRef = React.createRef();\n  }\n\n  componentDidMount() {\n    Draggable.create(this.switchThumbRef.current, {\n      type: 'x',\n      // throwProps: true,\n      throwProps: false,\n      bounds: this.switchRef.current,\n      onDrag: this.calculateValue,\n    });\n    this.draggableInstance = Draggable.get(this.switchThumbRef.current);\n    // this.draggableInstance.vars.snap = [this.draggableInstance.minX, this.draggableInstance.maxX];\n  }\n\n  calculateValue() {\n    this.setState({\n      value: (this.draggableInstance.x / (this.draggableInstance.minX + this.draggableInstance.maxX)) > 0.5,\n    });\n  }\n\n  render() {\n    return (\n      <div className='switch__container'>\n        <span className='switch__label'>\n          {this.props.label}\n        </span>\n        <div\n          ref={this.switchRef}\n          className={`switch switch--${this.state.value ? 'active' : 'inactive'}`}\n        >\n          <div ref={this.switchThumbRef} className='switch__thumb'></div>\n        </div>\n      </div>\n    );\n  }\n}\n\nSwitch.propTypes = {\n  label: PropTypes.string,\n  initialValue: PropTypes.bool,\n};\n\nSwitch.defaultProps = {\n  label: '',\n  initialValue: false,\n};\n\nexport { Switch };\n","class SynthEngine {\n  settings = {\n    master: {\n      level: 1,\n    },\n    oscillator: {\n      waveForm: 'square',\n    },\n    amp: {\n      attack: 0.1,\n      release: 1.5,\n    },\n    filter: {\n      cutoff: 350,\n      resonance: 0,\n      envelope: .25,\n      attack: 0.1,\n      release: .5,\n    },\n    reverb: {\n      level: .25,\n    },\n  };\n\n  constructor() {\n    this.initializeAudioContext();\n    this.initializeOscillatorNode();\n    this.initializeFilterNode();\n    this.initializeGainNode();\n    this.initializeReverb();\n    this.initializeCompressor();\n\n    // connect nodes\n    this.oscillatorNode.connect(this.filterNode1);\n    this.filterNode1.connect(this.filterNode2);\n    this.filterNode2.connect(this.reverbNode);\n    this.filterNode2.connect(this.reverbDryGain);\n    this.reverbNode.connect(this.reverbWetGain);\n    this.reverbWetGain.connect(this.volumeNode);\n    this.reverbDryGain.connect(this.volumeNode);\n    this.volumeNode.connect(this.compressorNode);\n    this.compressorNode.connect(this.audioContext.destination);\n    // start oscillator\n    this.oscillatorNode.start();\n  }\n\n  setLevel(value) {\n    this.settings.master.level = value;\n  }\n\n  setReverb(value) {\n    this.settings.reverb.level = value;\n\n    // equal-power crossfade\n    const drySignalGain = Math.cos(value * 0.5 * Math.PI);\n    const wetSignalGain = Math.cos((1.0 - value) * 0.5 * Math.PI);\n\n    this.reverbDryGain.gain.value = drySignalGain;\n    this.reverbWetGain.gain.value = wetSignalGain;\n  }\n\n  setAmpAttack(value) {\n    this.settings.amp.attack = value + .01;\n  }\n\n  setAmpRelease(value) {\n    this.settings.amp.release = value;\n  }\n\n  setFilterCutoff(value) {\n    this.settings.filter.cutoff = value;\n  }\n\n  setFilterResonance(value) {\n    this.settings.filter.resonance = value;\n  }\n\n  setFilterEnvelope(value) {\n    this.settings.filter.envelope = value;\n  }\n\n  setFilterAttack(value) {\n    this.settings.filter.attack = value;\n  }\n\n  setFilterRelease(value) {\n    this.settings.filter.release = value;\n  }\n\n  setWaveForm(waveForm) {\n    this.settings.oscillator.waveForm = waveForm;\n    this.oscillatorNode.type = waveForm;\n  }\n\n  initializeAudioContext() {\n    // create web audio api context\n    this.audioContext = new (window.AudioContext || window.webkitAudioContext)();\n  }\n\n  initializeOscillatorNode() {\n    // const real = new Float32Array(2);\n    // const imag = new Float32Array(2);\n\n    // real[0] = 0;\n    // imag[0] = 0;\n    // real[1] = 1;\n    // imag[1] = 0;\n\n    // // create custom waveform\n    // const wave = this.audioContext.createPeriodicWave(real, imag, { disableNormalization: true });\n\n    // create Oscillator node\n    this.oscillatorNode = this.audioContext.createOscillator();\n    // set custom wave type\n    // this.oscillatorNode.setPeriodicWave(wave);\n    this.oscillatorNode.type = this.settings.oscillator.waveForm;\n    // set frequency value in hertz\n    this.oscillatorNode.frequency.value = 440;\n  }\n\n  initializeGainNode() {\n    // create Gain node\n    this.volumeNode = this.audioContext.createGain();\n    // set gain to 0 (no output)\n    this.volumeNode.gain.setValueAtTime(0, this.audioContext.currentTime);\n  }\n\n  initializeFilterNode() {\n    this.filterNode1 = this.audioContext.createBiquadFilter();\n    this.filterNode2 = this.audioContext.createBiquadFilter();\n    this.filterNode1.type = 'lowpass';\n    this.filterNode2.type = 'lowpass';\n  }\n\n  initializeReverb() {\n    this.reverbNode = this.audioContext.createConvolver();\n    this.reverbWetGain = this.audioContext.createGain();\n    this.reverbDryGain = this.audioContext.createGain();\n\n    const irRoomRequest = new XMLHttpRequest();\n\n    // get sound of room we want to emulate\n    irRoomRequest.open(\"GET\", \"/reverb-impulse-1.wav\", true);\n    irRoomRequest.responseType = \"arraybuffer\";\n    irRoomRequest.onload = () => {\n      this.audioContext.decodeAudioData(\n        irRoomRequest.response,\n        (buffer) => {\n          this.reverbNode.buffer = buffer;\n        },\n      );\n    }\n    irRoomRequest.send();\n\n    this.setReverb(this.settings.reverb.level);\n  }\n\n  initializeCompressor() {\n    this.compressorNode = this.audioContext.createDynamicsCompressor();\n  }\n\n  triggerFilterEnvelope() {\n    const now = this.audioContext.currentTime;\n\n    this.filterNode1.frequency.cancelScheduledValues(now);\n    this.filterNode2.frequency.cancelScheduledValues(now);\n    this.filterNode1.frequency.setValueAtTime(this.filterNode1.frequency.value, now);\n    this.filterNode2.frequency.setValueAtTime(this.filterNode2.frequency.value, now);\n    this.filterNode1.Q.value = this.settings.filter.resonance;\n    this.filterNode2.Q.value = this.settings.filter.resonance;\n    this.filterNode1.frequency.linearRampToValueAtTime(\n      this.settings.filter.cutoff + ((15000 - this.settings.filter.cutoff) * this.settings.filter.envelope),\n      now + this.settings.filter.attack,\n    );\n    this.filterNode2.frequency.linearRampToValueAtTime(\n      this.settings.filter.cutoff + ((15000 - this.settings.filter.cutoff) * this.settings.filter.envelope),\n      now + this.settings.filter.attack,\n    );\n    this.filterNode1.frequency.setTargetAtTime(\n      this.settings.filter.cutoff,\n      now + this.settings.filter.attack,\n      this.settings.filter.release / 10,\n    );\n    this.filterNode2.frequency.setTargetAtTime(\n      this.settings.filter.cutoff,\n      now + this.settings.filter.attack,\n      this.settings.filter.release / 10,\n    );\n    this.filterNode1.frequency.setValueAtTime(this.settings.filter.cutoff, now + this.settings.filter.attack + this.settings.filter.release);\n    this.filterNode2.frequency.setValueAtTime(this.settings.filter.cutoff, now + this.settings.filter.attack + this.settings.filter.release);\n  }\n\n  triggerAmpEnvelope() {\n    const now = this.audioContext.currentTime;\n\n    this.volumeNode.gain.cancelScheduledValues(now);\n    this.volumeNode.gain.setValueAtTime(this.volumeNode.gain.value, now);\n    this.volumeNode.gain.linearRampToValueAtTime(\n      this.settings.master.level,\n      now + this.settings.amp.attack,\n    );\n    this.volumeNode.gain.setTargetAtTime(\n      0.0,\n      now + this.settings.amp.attack,\n      this.settings.amp.release / 10,\n    );\n    this.volumeNode.gain.setValueAtTime(0, now + this.settings.amp.attack + this.settings.amp.release);\n  }\n\n  playTone(frequency) {\n    this.oscillatorNode.frequency.value = frequency;\n\n    this.triggerFilterEnvelope();\n    this.triggerAmpEnvelope();\n  }\n}\n\nexport { SynthEngine };\n","import React from 'react';\nimport './Synth.scss';\n\nimport {\n  Button,\n  Knob,\n  Keyboard,\n} from './stories';\n\nimport { SynthEngine } from './SynthEngine';\n\nclass Octave {\n  constructor(a) {\n    this.b      = a *  Math.pow(2, 2/12);\n    this.aSharp = a *  Math.pow(2, 1/12);\n    this.a = a;\n    this.gSharp = a *  Math.pow(2, -1/12);\n    this.g      = a *  Math.pow(2, -2/12);\n    this.fSharp = a *  Math.pow(2, -3/12);\n    this.f      = a *  Math.pow(2, -4/12);\n    this.e      = a *  Math.pow(2, -5/12);\n    this.dSharp = a *  Math.pow(2, -6/12);\n    this.d      = a *  Math.pow(2, -7/12);\n    this.cSharp = a *  Math.pow(2, -8/12);\n    this.c      = a *  Math.pow(2, -9/12);\n  }\n}\n\nclass Synth extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      started: false,\n      waveForm: 'square',\n      startingOctave: 3,\n    };\n    this.initializeScale();\n    this.start = this.start.bind(this);\n    this.setLevel = this.setLevel.bind(this);\n    this.setReverb = this.setReverb.bind(this);\n    this.setAmpAttack = this.setAmpAttack.bind(this);\n    this.setAmpRelease = this.setAmpRelease.bind(this);\n    this.setFilterCutoff = this.setFilterCutoff.bind(this);\n    this.setFilterResonance = this.setFilterResonance.bind(this);\n    this.setFilterEnvelope = this.setFilterEnvelope.bind(this);\n    this.setFilterAttack = this.setFilterAttack.bind(this);\n    this.setFilterRelease = this.setFilterRelease.bind(this);\n    this.setWaveForm = this.setWaveForm.bind(this);\n    this.onKeyPressed = this.onKeyPressed.bind(this);\n  }\n\n  start() {\n    this.setState({ started: true });\n    this.synthEngine = new SynthEngine();\n  }\n\n  initializeScale() {\n    const A4 = 440;\n    this.scale = [];\n\n    for (let i = -4; i < 6; i++) {\n      let a = A4 * Math.pow(2, i);\n      let octave = new Octave(a);\n      this.scale.push(octave);\n    }\n  }\n\n  setLevel(value) {\n    this.synthEngine.setLevel(value);\n  }\n\n  setReverb(value) {\n    this.synthEngine.setReverb(value);\n  }\n\n  setAmpAttack(value) {\n    this.synthEngine.setAmpAttack(value);\n  }\n\n  setAmpRelease(value) {\n    this.synthEngine.setAmpRelease(value);\n  }\n\n  setFilterCutoff(value) {\n    this.synthEngine.setFilterCutoff(value);\n  }\n\n  setFilterResonance(value) {\n    this.synthEngine.setFilterResonance(value);\n  }\n\n  setFilterEnvelope(value) {\n    this.synthEngine.setFilterEnvelope(value);\n  }\n\n  setFilterAttack(value) {\n    this.synthEngine.setFilterAttack(value);\n  }\n\n  setFilterRelease(value) {\n    this.synthEngine.setFilterRelease(value);\n  }\n\n  setWaveForm(waveForm) {\n    this.setState({ waveForm });\n    this.synthEngine.setWaveForm(waveForm);\n  }\n\n  onKeyPressed(octave, note) {\n    this.synthEngine.playTone(this.scale[octave][note]);\n  }\n\n  setStartingOctave(octave) {\n    this.setState({ startingOctave: octave });\n  }\n\n  render() {\n    if (!this.state.started) {\n      return (\n        <Button onClick={this.start}>Click To Begin</Button>\n      );\n    }\n\n    return (\n      <div className='synth'>\n        <div className='flex justify-center'>\n          <div className='synth__controls'>\n            <div className='flex justify-center'>\n              <div className='section section__octave-buttons'>\n                <span className='section__label'>Octave</span>\n                <Button\n                  disabled={this.state.startingOctave === 7}\n                  onClick={() => this.setStartingOctave(this.state.startingOctave + 1)}\n                  aria-label='up'\n                >\n                  &#9651;\n                </Button>\n                <Button\n                  disabled={this.state.startingOctave === 0}\n                  onClick={() => this.setStartingOctave(this.state.startingOctave - 1)}\n                  aria-label='down'\n                >\n                  &#9661;\n                </Button>\n              </div>\n              <div className='section'>\n                <span className='section__label'>Master</span>\n                <Knob\n                  label='Level'\n                  precision={2}\n                  initialValue={1}\n                  minValue={0}\n                  maxValue={1}\n                  valueChanged={this.setLevel}\n                ></Knob>\n                <Knob\n                  label='Reverb'\n                  precision={2}\n                  initialValue={.25}\n                  minValue={0}\n                  maxValue={1}\n                  valueChanged={this.setReverb}\n                ></Knob>\n              </div>\n              <div className='section'>\n                <span className='section__label'>Amp Envelope</span>\n                <Knob\n                  label='Attack'\n                  units='s'\n                  precision={2}\n                  initialValue={0.1}\n                  minValue={0.01}\n                  maxValue={10}\n                  valueChanged={this.setAmpAttack}\n                ></Knob>\n                <Knob\n                  label='Release'\n                  units='s'\n                  precision={2}\n                  initialValue={1.5}\n                  minValue={0.1}\n                  maxValue={10}\n                  valueChanged={this.setAmpRelease}\n                ></Knob>\n              </div>\n            </div>\n            <div className='flex justify-center'>\n              <div className='section'>\n                <span className='section__label'>Filter Envelope</span>\n                <Knob\n                  label='Attack'\n                  units='s'\n                  precision={2}\n                  initialValue={0.1}\n                  minValue={0.01}\n                  maxValue={10}\n                  valueChanged={this.setFilterAttack}\n                ></Knob>\n                <Knob\n                  label='Release'\n                  units='s'\n                  precision={2}\n                  initialValue={.5}\n                  minValue={0.01}\n                  maxValue={10}\n                  valueChanged={this.setFilterRelease}\n                ></Knob>\n              </div>\n              <div className='section'>\n                <span className='section__label'>Filter</span>\n                <Knob\n                  label='Cutoff'\n                  units='Hz'\n                  precision={0}\n                  initialValue={350}\n                  minValue={20}\n                  maxValue={15000}\n                  valueChanged={this.setFilterCutoff}\n                ></Knob>\n                <Knob\n                  label='Resonance'\n                  precision={2}\n                  initialValue={0}\n                  minValue={0}\n                  maxValue={10}\n                  valueChanged={this.setFilterResonance}\n                ></Knob>\n                <Knob\n                  label='Envelope'\n                  precision={2}\n                  initialValue={.25}\n                  minValue={0}\n                  maxValue={1}\n                  valueChanged={this.setFilterEnvelope}\n                ></Knob>\n              </div>\n            </div>\n          </div>\n          <div className='section'>\n            <span className='section__label'>Waveform</span>\n            <Button\n              disabled={this.state.waveForm === 'sine'}\n              onClick={() => this.setWaveForm('sine')}\n            >\n              Sine\n            </Button>\n            <Button\n              disabled={this.state.waveForm === 'square'}\n              onClick={() => this.setWaveForm('square')}\n            >\n              Square\n            </Button>\n            <Button\n              disabled={this.state.waveForm === 'triangle'}\n              onClick={() => this.setWaveForm('triangle')}\n            >\n              Triangle\n            </Button>\n            <Button\n              disabled={this.state.waveForm === 'sawtooth'}\n              onClick={() => this.setWaveForm('sawtooth')}\n            >\n              Sawtooth\n            </Button>\n          </div>\n        </div>\n        <Keyboard\n          numOctaves={2}\n          startingOctave={this.state.startingOctave}\n          onKeyPressed={this.onKeyPressed}\n        >\n        </Keyboard>\n      </div>\n    );\n  }\n}\n\nexport { Synth };\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport { Synth } from './Synth';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <Synth />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}